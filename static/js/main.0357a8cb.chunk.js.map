{"version":3,"sources":["dal/mock-fetch.ts","bll/Reducer.ts","ui/Employees.tsx","ui/WorkLogs.tsx","App.tsx","dal/Api.ts","bll/Store.ts","index.tsx"],"names":["data","id","firstName","lastName","middleName","birthDate","phone","employee_id","from","to","mockFetch","url","val","Promise","res","rej","setTimeout","initialState","employees","worklogs","sortOrientation","Employees","props","history","useHistory","dispatch","useDispatch","useSelector","state","app","onClickEmployee","employeeId","path","push","useEffect","type","orientation","TableContainer","component","Paper","Table","TableHead","style","backgroundColor","TableRow","TableCell","Button","variant","onClick","setSortOrientationAC","onClickSort","TableBody","map","employee","WorkLogs","useParams","filtredWorklogs","filter","worklog","find","App","getState","a","response","className","exact","render","reducers","combineReducers","action","newState","em","sort","b","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById"],"mappings":"oTA8TMA,EAAO,CACX,iBA/TgB,CAChB,CACEC,GAAI,EACJC,UAAW,uCACXC,SAAU,uFACVC,WAAY,+DACZC,UAAW,aACXC,MAAO,gBAET,CACEL,GAAI,EACJC,UAAW,mDACXC,SAAU,6CACVC,WAAY,mDACZC,UAAW,aACXC,MAAO,gBAET,CACEL,GAAI,EACJC,UAAW,uCACXC,SAAU,mDACVC,WAAY,uFACZC,UAAW,aACXC,MAAO,gBAET,CACEL,GAAI,EACJC,UAAW,iCACXC,SAAU,+DACVC,WAAY,+DACZC,UAAW,aACXC,MAAO,gBAET,CACEL,GAAI,EACJC,UAAW,mDACXC,SAAU,2BACVC,WAAY,2DACZC,UAAW,YACXC,MAAO,gBAET,CACEL,GAAI,EACJC,UAAW,yDACXC,SAAU,6CACVC,WAAY,6CACZC,UAAW,aACXC,MAAO,gBAiRT,yBA7Qc,CACd,CACEL,GAAI,EACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,EACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,EACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,EACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,EACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,EACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,EACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,EACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,EACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,GACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,GACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,GACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,GACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,GACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,GACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,GACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,GACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,GACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,GACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,GACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,GACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,GACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,GACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,GACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,GACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,GACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,GACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,GACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,GACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,GACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,GACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,GACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,GACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,GACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,GACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,GACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,GACJM,YAAa,EACbC,KAAM,sBACNC,GAAI,uBAEN,CACER,GAAI,GACJM,Y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","file":"static/js/main.0357a8cb.chunk.js","sourcesContent":["const employees = [\r\n  {\r\n    id: 1,\r\n    firstName: 'Леонид',\r\n    lastName: 'Старокадомский',\r\n    middleName: 'Михайлович',\r\n    birthDate: '1875-03-27',\r\n    phone: '+79975669545',\r\n  },\r\n  {\r\n    id: 2,\r\n    firstName: 'Владимир',\r\n    lastName: 'Демихов',\r\n    middleName: 'Петрович',\r\n    birthDate: '1916-06-18',\r\n    phone: '+74951263366',\r\n  },\r\n  {\r\n    id: 3,\r\n    firstName: 'Виктор',\r\n    lastName: 'Калнберз',\r\n    middleName: 'Константинович',\r\n    birthDate: '1928-06-02',\r\n    phone: '+37156698963',\r\n  },\r\n  {\r\n    id: 4,\r\n    firstName: 'Алоис',\r\n    lastName: 'Альцгеймер',\r\n    middleName: 'Эдуардович',\r\n    birthDate: '1864-06-14',\r\n    phone: '+15559665599',\r\n  },\r\n  {\r\n    id: 5,\r\n    firstName: 'Авиценна',\r\n    lastName: 'Сина',\r\n    middleName: 'Абу Али Ибн',\r\n    birthDate: '980-08-23',\r\n    phone: '+15559171855',\r\n  },\r\n  {\r\n    id: 6,\r\n    firstName: 'Александр',\r\n    lastName: 'Флеминг',\r\n    middleName: 'Хугович',\r\n    birthDate: '1881-08-06',\r\n    phone: '+4569988569',\r\n  },\r\n];\r\n\r\nconst worklog = [\r\n  {\r\n    id: 1,\r\n    employee_id: 1,\r\n    from: '2021-03-04 04:44:44',\r\n    to: '2021-03-04 06:46:09',\r\n  },\r\n  {\r\n    id: 2,\r\n    employee_id: 1,\r\n    from: '2021-03-04 06:55:01',\r\n    to: '2021-03-04 08:13:10',\r\n  },\r\n  {\r\n    id: 3,\r\n    employee_id: 1,\r\n    from: '2021-03-04 09:11:45',\r\n    to: '2021-03-04 10:55:34',\r\n  },\r\n  {\r\n    id: 4,\r\n    employee_id: 1,\r\n    from: '2021-03-04 11:31:54',\r\n    to: '2021-03-04 13:36:34',\r\n  },\r\n  {\r\n    id: 5,\r\n    employee_id: 1,\r\n    from: '2021-03-04 14:40:52',\r\n    to: '2021-03-04 21:31:27',\r\n  },\r\n  {\r\n    id: 6,\r\n    employee_id: 1,\r\n    from: '2021-03-04 21:32:16',\r\n    to: '2021-03-04 22:13:47',\r\n  },\r\n  {\r\n    id: 7,\r\n    employee_id: 1,\r\n    from: '2021-03-04 22:44:21',\r\n    to: '2021-03-04 22:47:15',\r\n  },\r\n  {\r\n    id: 8,\r\n    employee_id: 1,\r\n    from: '2021-03-04 23:27:07',\r\n    to: '2021-03-04 23:41:45',\r\n  },\r\n  {\r\n    id: 9,\r\n    employee_id: 1,\r\n    from: '2021-03-04 23:41:54',\r\n    to: '2021-03-04 23:44:51',\r\n  },\r\n  {\r\n    id: 10,\r\n    employee_id: 1,\r\n    from: '2021-03-04 23:53:00',\r\n    to: '2021-04-04 01:15:22',\r\n  },\r\n  {\r\n    id: 11,\r\n    employee_id: 2,\r\n    from: '2021-03-04 03:44:44',\r\n    to: '2021-03-04 03:46:09',\r\n  },\r\n  {\r\n    id: 12,\r\n    employee_id: 2,\r\n    from: '2021-03-04 03:55:01',\r\n    to: '2021-03-04 08:13:10',\r\n  },\r\n  {\r\n    id: 13,\r\n    employee_id: 2,\r\n    from: '2021-03-04 09:11:43',\r\n    to: '2021-03-04 10:55:37',\r\n  },\r\n  {\r\n    id: 14,\r\n    employee_id: 2,\r\n    from: '2021-03-04 10:56:54',\r\n    to: '2021-03-04 13:36:34',\r\n  },\r\n  {\r\n    id: 15,\r\n    employee_id: 2,\r\n    from: '2021-03-04 13:40:52',\r\n    to: '2021-03-04 15:31:27',\r\n  },\r\n  {\r\n    id: 16,\r\n    employee_id: 2,\r\n    from: '2021-03-04 15:32:16',\r\n    to: '2021-03-04 16:13:47',\r\n  },\r\n  {\r\n    id: 17,\r\n    employee_id: 3,\r\n    from: '2021-03-04 00:00:16',\r\n    to: '2021-03-04 12:00:47',\r\n  },\r\n  {\r\n    id: 18,\r\n    employee_id: 3,\r\n    from: '2021-03-04 12:33:56',\r\n    to: '2021-03-04 20:11:11',\r\n  },\r\n  {\r\n    id: 19,\r\n    employee_id: 4,\r\n    from: '2021-03-04 00:12:12',\r\n    to: '2021-03-04 04:07:09',\r\n  },\r\n  {\r\n    id: 20,\r\n    employee_id: 4,\r\n    from: '2021-03-04 06:33:25',\r\n    to: '2021-03-04 08:56:12',\r\n  },\r\n  {\r\n    id: 21,\r\n    employee_id: 4,\r\n    from: '2021-03-04 09:02:45',\r\n    to: '2021-03-04 10:11:11',\r\n  },\r\n  {\r\n    id: 22,\r\n    employee_id: 4,\r\n    from: '2021-03-04 11:12:10',\r\n    to: '2021-03-04 13:36:34',\r\n  },\r\n  {\r\n    id: 23,\r\n    employee_id: 4,\r\n    from: '2021-03-04 13:16:52',\r\n    to: '2021-03-04 14:31:27',\r\n  },\r\n  {\r\n    id: 24,\r\n    employee_id: 4,\r\n    from: '2021-03-04 16:32:16',\r\n    to: '2021-03-04 19:13:59',\r\n  },\r\n  {\r\n    id: 25,\r\n    employee_id: 4,\r\n    from: '2021-03-04 19:44:21',\r\n    to: '2021-03-04 22:54:15',\r\n  },\r\n  {\r\n    id: 26,\r\n    employee_id: 4,\r\n    from: '2021-03-04 23:27:19',\r\n    to: '2021-03-04 23:41:30',\r\n  },\r\n  {\r\n    id: 27,\r\n    employee_id: 5,\r\n    from: '2021-03-04 11:12:12',\r\n    to: '2021-03-04 12:07:09',\r\n  },\r\n  {\r\n    id: 28,\r\n    employee_id: 5,\r\n    from: '2021-03-04 12:32:25',\r\n    to: '2021-03-04 12:56:13',\r\n  },\r\n  {\r\n    id: 29,\r\n    employee_id: 5,\r\n    from: '2021-03-04 14:02:17',\r\n    to: '2021-03-04 14:11:08',\r\n  },\r\n  {\r\n    id: 30,\r\n    employee_id: 5,\r\n    from: '2021-03-04 15:12:19',\r\n    to: '2021-03-04 16:33:33',\r\n  },\r\n  {\r\n    id: 31,\r\n    employee_id: 5,\r\n    from: '2021-03-04 18:25:52',\r\n    to: '2021-03-04 20:31:12',\r\n  },\r\n  {\r\n    id: 32,\r\n    employee_id: 5,\r\n    from: '2021-03-04 20:32:20',\r\n    to: '2021-03-04 21:21:21',\r\n  },\r\n  {\r\n    id: 33,\r\n    employee_id: 5,\r\n    from: '2021-03-04 22:44:21',\r\n    to: '2021-03-04 22:54:15',\r\n  },\r\n  {\r\n    id: 34,\r\n    employee_id: 5,\r\n    from: '2021-03-04 22:59:19',\r\n    to: '2021-03-04 23:29:30',\r\n  },\r\n  {\r\n    id: 35,\r\n    employee_id: 6,\r\n    from: '2021-03-04 02:15:44',\r\n    to: '2021-03-04 04:46:09',\r\n  },\r\n  {\r\n    id: 36,\r\n    employee_id: 6,\r\n    from: '2021-03-04 17:26:01',\r\n    to: '2021-03-04 08:17:10',\r\n  },\r\n  {\r\n    id: 37,\r\n    employee_id: 6,\r\n    from: '2021-03-04 09:29:45',\r\n    to: '2021-03-04 11:32:34',\r\n  },\r\n  {\r\n    id: 38,\r\n    employee_id: 6,\r\n    from: '2021-03-04 11:39:07',\r\n    to: '2021-03-04 13:39:07',\r\n  },\r\n  {\r\n    id: 39,\r\n    employee_id: 6,\r\n    from: '2021-03-04 14:15:52',\r\n    to: '2021-03-04 19:01:08',\r\n  },\r\n  {\r\n    id: 40,\r\n    employee_id: 6,\r\n    from: '2021-03-04 19:32:47',\r\n    to: '2021-03-04 20:55:47',\r\n  },\r\n  {\r\n    id: 41,\r\n    employee_id: 6,\r\n    from: '2021-03-04 22:59:00',\r\n    to: '2021-03-04 23:09:15',\r\n  },\r\n  {\r\n    id: 42,\r\n    employee_id: 6,\r\n    from: '2021-03-04 23:27:05',\r\n    to: '2021-03-04 23:30:45',\r\n  },\r\n  {\r\n    id: 43,\r\n    employee_id: 6,\r\n    from: '2021-03-04 23:30:54',\r\n    to: '2021-03-04 23:50:01',\r\n  },\r\n  {\r\n    id: 44,\r\n    employee_id: 6,\r\n    from: '2021-04-04 00:53:00',\r\n    to: '2021-04-04 04:15:22',\r\n  },\r\n];\r\n\r\nconst data = {\r\n  '/api/employees': employees,\r\n  '/api/employees/worklog': worklog,\r\n};\r\n\r\nfunction delay(val: any) {\r\n  return new Promise((res, rej) => setTimeout(val ? res : rej, 500, val));\r\n}\r\n\r\nexport function mockFetch(url: '/api/employees' | '/api/employees/worklog') {\r\n  const payload = data[url];\r\n\r\n  return delay(payload);\r\n}\r\n","import { getEmployees, getWorklog, EmployeesType, WorkLogType } from '../dal/Api';\nimport { AppStateType } from './Store';\n\nlet initialState = {\n  employees: [] as Array<EmployeesType>,\n  worklogs: [] as Array<WorkLogType>,\n  sortOrientation: 'asc' as 'asc' | 'desc',\n};\n\nexport const Reducer = (state = initialState, action: ActionsType): InitialStateType => {\n  switch (action.type) {\n    case 'SET_EMPLOYEES':\n      return { ...state, employees: action.employees };\n    case 'SET_WORKLOG':\n      return { ...state, worklogs: action.worklogs };\n    case 'SET_SORT_ORIENTATION':\n      return { ...state, sortOrientation: action.sortOrientation === 'asc' ? 'desc' : 'asc' };\n    case 'SORT_NAME':\n      let newState = {\n        ...state,\n        employees: state.employees.map(em => {\n          return { ...em };\n        }),\n      };\n      if (action.orientation === 'asc') {\n        newState.employees.sort((a, b) => {\n          if (a.lastName > b.lastName) {\n            return 1;\n          }\n          if (a.lastName < b.lastName) {\n            return -1;\n          }\n          return 0;\n        });\n      } else if (action.orientation === 'desc') {\n        newState.employees.sort((a, b) => {\n          if (a.lastName < b.lastName) {\n            return 1;\n          }\n          if (a.lastName > b.lastName) {\n            return -1;\n          }\n          return 0;\n        });\n      }\n      return newState;\n    default:\n      return state;\n  }\n};\n\n//Action creators\nexport const setEmployeesAC = (employees: Array<EmployeesType>) => ({ type: 'SET_EMPLOYEES', employees } as const);\nexport const setWorkLogAC = (worklogs: Array<WorkLogType>) => ({ type: 'SET_WORKLOG', worklogs } as const);\nexport const sortNameAC = (orientation: string) => ({ type: 'SORT_NAME', orientation } as const);\nexport const setSortOrientationAC = (sortOrientation: string) => ({ type: 'SET_SORT_ORIENTATION', sortOrientation } as const);\n//Thunk creators\n\nexport const getEmployeesTC = () => async (dispatch: any, getState: () => AppStateType) => {\n  try {\n    const response: any = await getEmployees();\n    dispatch(setEmployeesAC(response));\n  } catch (error) {}\n};\nexport const getWorkLogTC = () => async (dispatch: any, getState: () => AppStateType) => {\n  try {\n    const response: any = await getWorklog();\n    dispatch(setWorkLogAC(response));\n  } catch (error) {}\n};\n//types\ntype ActionsType = ReturnType<typeof setEmployeesAC> | ReturnType<typeof setWorkLogAC> | ReturnType<typeof sortNameAC> | ReturnType<typeof setSortOrientationAC>;\n\nexport type InitialStateType = typeof initialState;\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { EmployeesType } from '../dal/Api';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { sortNameAC, setSortOrientationAC } from '../bll/Reducer';\r\nimport { AppStateType } from '../bll/Store';\r\n\r\ntype EmployeesPropsType = {\r\n  employees: Array<EmployeesType>;\r\n};\r\n\r\nexport const Employees = (props: EmployeesPropsType) => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const sortOrientation = useSelector<AppStateType, string>(state => state.app.sortOrientation);\r\n  const onClickEmployee = (employeeId: number) => {\r\n    let path = `workLog/${employeeId}`;\r\n    history.push(path);\r\n  };\r\n  const onClickSort = (sortOrientation: string) => {\r\n    dispatch(setSortOrientationAC(sortOrientation));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(sortNameAC(sortOrientation));\r\n  }, [sortOrientation]);\r\n  const { employees } = props;\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table>\r\n        <TableHead style={{ backgroundColor: 'grey' }}>\r\n          <TableRow>\r\n            <TableCell>id</TableCell>\r\n            <TableCell>\r\n              <Button\r\n                variant='contained'\r\n                onClick={() => {\r\n                  onClickSort(sortOrientation);\r\n                }}\r\n              >\r\n                sort\r\n              </Button>\r\n              employee\r\n            </TableCell>\r\n            <TableCell>birth Date</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {employees.map(employee => (\r\n            <TableRow key={employee.id}>\r\n              <TableCell\r\n                onClick={() => {\r\n                  onClickEmployee(employee.id);\r\n                }}\r\n              >\r\n                {employee.id}\r\n              </TableCell>\r\n              <TableCell\r\n                onClick={() => {\r\n                  onClickEmployee(employee.id);\r\n                }}\r\n              >\r\n                {employee.lastName} {employee.firstName} {employee.middleName}\r\n              </TableCell>\r\n              <TableCell\r\n                onClick={() => {\r\n                  onClickEmployee(employee.id);\r\n                }}\r\n              >\r\n                {employee.birthDate}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { WorkLogType, EmployeesType } from '../dal/Api';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Button } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\ntype WorkLogsPropsType = {\r\n  worklogs: Array<WorkLogType>;\r\n  employees: Array<EmployeesType>;\r\n};\r\n\r\nexport const WorkLogs = (props: WorkLogsPropsType) => {\r\n  const { worklogs, employees } = props;\r\n  const { employeeId } = useParams<{ employeeId: string }>();\r\n  const history = useHistory();\r\n  const onClickBack = () => {\r\n    history.push('/employees');\r\n  };\r\n  const filtredWorklogs = worklogs.filter(worklog => worklog.employee_id === +employeeId);\r\n  const employee = employees.find(employee => employee.id === +employeeId);\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer component={Paper}>\r\n        <Table>\r\n          <TableHead style={{ backgroundColor: 'grey' }}>\r\n            <TableRow>\r\n              <TableCell>employee</TableCell>\r\n              <TableCell>entrance</TableCell>\r\n              <TableCell>exit</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {filtredWorklogs.map(worklog => (\r\n              <TableRow key={worklog.id}>\r\n                <TableCell>\r\n                  {employee && employee.lastName} {employee && employee.firstName} {employee && employee.middleName}\r\n                </TableCell>\r\n                <TableCell>{worklog.from}</TableCell>\r\n                <TableCell>{worklog.to}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Button style={{ backgroundColor: 'grey' }} onClick={onClickBack}>\r\n        Back\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Employees } from './ui/Employees';\nimport { WorkLogs } from './ui/WorkLogs';\nimport { getEmployeesTC, getWorkLogTC } from './bll/Reducer';\nimport { AppStateType } from './bll/Store';\nimport { EmployeesType, WorkLogType } from './dal/Api';\n\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getEmployeesTC());\n    dispatch(getWorkLogTC());\n  }, []);\n  const employees = useSelector<AppStateType, Array<EmployeesType>>(state => state.app.employees);\n  const worklogs = useSelector<AppStateType, Array<WorkLogType>>(state => state.app.worklogs);\n\n  return (\n    <div className='App'>\n      <Switch>\n        <Route exact path='/' render={() => <Redirect to={'/employees'} />} />\n        <Route exact path='/employees' render={() => <Employees employees={employees} />} />\n        <Route exact path='/workLog/:employeeId?' render={() => <WorkLogs worklogs={worklogs} employees={employees} />} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import { mockFetch } from './mock-fetch';\r\n\r\nexport function getEmployees() {\r\n  return mockFetch('/api/employees');\r\n}\r\n\r\nexport function getWorklog() {\r\n  return mockFetch('/api/employees/worklog');\r\n}\r\n\r\nexport type EmployeesType = {\r\n  id: number;\r\n  firstName: string;\r\n  lastName: string;\r\n  middleName: string;\r\n  birthDate: string;\r\n  phone: string;\r\n};\r\n\r\nexport type WorkLogType = {\r\n  id: number;\r\n  employee_id: number;\r\n  from: string;\r\n  to: string;\r\n};\r\n","import { applyMiddleware, combineReducers, createStore, compose } from 'redux';\nimport { Reducer } from './Reducer';\nimport thunkMiddleware from 'redux-thunk';\n\nlet reducers = combineReducers({\n  app: Reducer,\n});\n\nexport type AppStateType = ReturnType<typeof reducers>;\n\nexport let store = createStore(reducers, applyMiddleware(thunkMiddleware));\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './bll/Store';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}